package com.zyrtec.kiteflying.view.screens{	import com.bigspaceship.display.StandardInOut;	import com.bigspaceship.events.AnimationEvent;	import com.bigspaceship.utils.Out;	import com.g2.gaming.framework.BasicScreen;	import com.g2.gaming.framework.events.ButtonIdEvent;	import com.g2.gaming.framework.events.SoundEvent;
		public class KFLevelIn extends KFAbstractScreen	{		public function KFLevelIn($mc:ScreenLevelInMC, id:int=0, addBitmapBackground:Boolean=false, width:Number=0, height:Number=0, isTransparent:Boolean=false, color:uint=0)		{			super(id, addBitmapBackground, width, height, isTransparent, color);			view = $mc;			addChild(view);			_init();					}		private function _init():void
		{
			std = new StandardInOut(view);			view.addEventListener(SoundEvent.PLAY_SOUND, dispatchEvent);		}
		//end constructor
				override public function animateIn():void {			Out.status(this, "animateIn");			std.addEventListener(AnimationEvent.IN, _onAnimateIn);			std.animateIn();		}		override public function animateOut():void {			Out.status(this, "animateOut");			std.addEventListener(AnimationEvent.OUT, dispatchEvent);			std.animateOut();		}				private function _onAnimateIn($ae:AnimationEvent):void {			Out.status(this, "onAnimateIn");			std.removeEventListener(AnimationEvent.IN, _onAnimateIn);			//dispatchEvent(new ButtonIdEvent(ButtonIdEvent.BUTTON_ID, this.id)); 			dispatchEvent($ae);		}		private function _onAnimateOut($ae:AnimationEvent):void{			Out.status(this, "onAnimateOut");			dispatchEvent($ae);		}	}}