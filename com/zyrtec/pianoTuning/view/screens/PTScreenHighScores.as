package com.zyrtec.pianoTuning.view.screens{	import com.bigspaceship.utils.Out;	import com.g2.gaming.framework.BasicScreen;	import com.g2.gaming.framework.events.ButtonIdEvent;	import com.greensock.*;	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.zyrtec.analytics.Tracking;	import com.zyrtec.events.ZyrtecGameEvent;	import com.zyrtec.interfaces.ILeaderboard;	import com.zyrtec.pianoTuning.model.PTModel;	import com.zyrtec.pianoTuning.view.screens.highscores.PTLeaderboard;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.text.*;
	// =================================================	// ================ @Class	// =================================================	public class PTScreenHighScores extends ScreenBase implements ILeaderboard	{		public var leaderboard	:PTLeaderboard;	//leaderboard subclass of global leaderboard		private var	_model		:PTModel;		// Game Model 				// =================================================		// ================ @Constructor		// =================================================		public function PTScreenHighScores(id:int=0, addBitmapBackground:Boolean=false, width:Number=0, height:Number=0, isTransparent:Boolean=false, color:uint=0):void		{			_model = PTModel.getInstance();						TweenPlugin.activate([RemoveTintPlugin, TintPlugin]);			super(id, addBitmapBackground, width, height, isTransparent, color);						var leaderboardMC:LeaderboardMC = new LeaderboardMC();			addChild(leaderboardMC);			this.leaderboard = new PTLeaderboard(leaderboardMC, _model); //leaderboard controller				}		// =================================================		// ================ @Callable		// =================================================		override public function addEvents():void{			Out.status(this, "addEvents");			if (leaderboard!=null) {				leaderboard.addEventListener(ZyrtecGameEvent.PLAY_AGAIN, onPlayAgain, false, 0, true);				leaderboard.addEvents(); //enables buttons after animation done 			}						//oc: tracking			Tracking.track(Tracking.L3_GAME_PIANO_CONGRATS);					}//end function				override public function removeEvents():void{			if (leaderboard!=null) {				leaderboard.removeEventListener(ZyrtecGameEvent.PLAY_AGAIN, onPlayAgain);				leaderboard.removeEvents();			}					}				public function setStaticText():void{			leaderboard.setStaticText();		}				public function updateLeaderboard():void {			leaderboard.setLeaderboardText();		}		// =================================================		// ================ @Workers		// =================================================				// =================================================		// ================ @Handlers		// =================================================				private function onPlayAgain(e:ZyrtecGameEvent):void{ //restart the game, go to next system state			dispatchEvent(new ButtonIdEvent(ButtonIdEvent.BUTTON_ID, this.id));		}			}}