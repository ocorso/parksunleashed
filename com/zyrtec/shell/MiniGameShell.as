package com.zyrtec.shell{	import com.bigspaceship.utils.Out;	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.theginbin.ui.RollOverButton;	import com.zyrtec.interfaces.*;		import flash.display.Loader;	import flash.display.LoaderInfo;	import flash.display.MovieClip;	import flash.errors.IOError;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.system.ApplicationDomain;	import flash.system.LoaderContext;	import flash.external.ExternalInterface;		import net.ored.util.ORedUtils;
		public class MiniGameShell extends MovieClip implements IMiniGame	{		private var _game:MovieClip;		private var _logo:MovieClip;		public var _instructions:MovieClip;		protected var _gameShadow:MovieClip;		private var _loader:Loader;				//private var _trackingcallback:Function; 		protected var _completecallback:Function; 		protected var _leaderboardcallback:Function; 		protected var _logincallback:Function;		protected var _signincallback:Function; 		protected var _gameDataObj:Object;		protected var _appFileName:String;				public function MiniGameShell()		{			//ORedUtils.turnOutOn();			Out.info(this, "this is an updated parent shell, like a fierce, ferocious prededor of the rainforest");						//NOTE: OVERRIDE CONSTRUCTOR WITH YOUR UNIQUE INSTRUCTIONS CLIP NAME AND SET THE GAME FILE PATH			TweenPlugin.activate([VisiblePlugin]);			//_instructions = new BMShellInstructionsMC();			//_appFileName = "BaseballMemoryApp.swf";			//addEventListener(Event.ADDED_TO_STAGE, onAddedToStage); //USE ONLY FOR TESTING, COMMENT OUT FOR DELIVERY		}				public function onAddedToStage(e:Event):void {			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			_gameDataObj = { //TEST GAME DATA OBJECT				uid:"-1",				sid:"-1",				gid:"-1",				cdn:"", //"http://c679303.r3.cf2.rackcdn.com/main/game/L1/",				shareURL:"http://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fyoutube.com%2Fparksunleashed",				name:"Gina B.",				isArcadeMode:false,				showQuiz:true,				hasDogBonus:true,				hasFriendBonus:false			};						initMiniGame(completecallback, leaderboardcallback, logincallback, signincallback, _gameDataObj);		}				public function initMiniGame($completecallback:Function, $leaderboardcallback:Function, $logincallback:Function, $signincallback:Function, $gamedata:Object):void		{			Out.status(this, "initMiniGame");			ORedUtils.objectToString($gamedata);			ORedUtils.printFlashVars($gamedata);						_completecallback = $completecallback;			_leaderboardcallback = $leaderboardcallback;			_logincallback = $logincallback;			_signincallback = $signincallback;			_gameDataObj = $gamedata;						_loader = new Loader();						var context:LoaderContext = new LoaderContext();			//context.applicationDomain = ApplicationDomain.currentDomain;			context.applicationDomain = new ApplicationDomain();						_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onAssetsLoaded, false, 0, true);			_loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, loadProgress);			_loader.load(new URLRequest($gamedata.cdn+_appFileName), context);//BaseballMemoryApp.swf, //KiteFlyingApp.swf						_instructions.btnBegin.alpha = 0;			_instructions.preloader.bar.scaleX = 0;			_instructions.preloader.txtLoad.alpha = 0;			_instructions.x = 204;			_instructions.y = -_instructions.height;			addChild(_instructions);			TweenMax.to(_instructions, 0.5, {y:54, ease:Back.easeOut, delay:0.5});						if (_instructions.btnOfficialRules != null) {				RollOverButton(_instructions.btnOfficialRules).addEvents();				_instructions.btnOfficialRules.addEventListener(MouseEvent.CLICK, onRulesClick);			}						_gameShadow = new GameShadow();			_gameShadow.alpha = 0;			addChild(_gameShadow);			_gameShadow.width = _instructions.width ;			_gameShadow.x = _instructions.x;			_gameShadow.y = 525;			TweenMax.to(_gameShadow, 0.6, {alpha:1, delay:0.5});						_logo = new LogoMC();			_logo.mouseEnabled = false;			_logo.x = 110;			_logo.y = 90;			addChild(_logo);		}				public function setLeaderBoard($o:Object):void{			_game.setLeaderBoard($o);		}				public function getScore():Object		{			return _game.getScore();		}				public function muteGame($b:Boolean):void		{			_game.muteGame($b);		}				public function gameQuit():Boolean		{			_game.gameQuit(); 			//_loader.unloadAndStop();			return true;		}				public function gamePause($b:Boolean):void		{			_game.gamePause($b); 		}				public function setGameData($o:Object):void{			_game.setGameData($o);		}				// =================================================		// ================ @ REQUIRED CALLBACKS		// =================================================		public function signincallback($o:Object=null):void {			_signincallback();		};				public function leaderboardcallback($o:Object=null):void {			_leaderboardcallback($o);		};				public function completecallback():void {  //game session has ended			_game.gameQuit();			//_loader.unloadAndStop();			_completecallback();		};				public function logincallback():void { //show log in screen			_logincallback();		}; 				// =================================================		// ================ @Workers		// =================================================				//FUNCTION : INIT GAME		private function initGame():void {			_game.initMiniGame(completecallback, leaderboardcallback, logincallback, signincallback, _gameDataObj);		}				// =================================================		// ================ @Handlers		// =================================================				//FUNCTION : ON SWF LOAD PROGRESS 		private function loadProgress(event:ProgressEvent):void {			var percentLoaded:Number=event.bytesLoaded/event.bytesTotal;			//percentLoaded=Math.round(percentLoaded*100);			_instructions.preloader.txtLoad.alpha = 1;			if (percentLoaded<1) {				_instructions.preloader.txtLoad.txt.autoSize="right";				_instructions.preloader.txtLoad.txt.text = Math.round(percentLoaded*100).toString()+"%";				_instructions.preloader.txtLoad.x=_instructions.preloader.bar.width-_instructions.preloader.txtLoad.width;				_instructions.preloader.bar.scaleX = percentLoaded;				//trace(percentLoaded.toString());			} else {				//trace("swf is 100% loaded");				TweenMax.to(_instructions.preloader, 0.3, {alpha:0, visible:false});				TweenMax.to(_instructions.btnBegin, 0.3, {alpha:1, delay:0.3});				event.target.removeEventListener(ProgressEvent.PROGRESS, loadProgress);							}		}				//FUNCTION : ON SWF LOADED		private function onAssetsLoaded(event:Event):void {			event.target.removeEventListener(Event.COMPLETE, onAssetsLoaded);						//_preloader.visible = false;			_game=MovieClip(event.target.content);			this.addChildAt(_game, 0);						RollOverButton(_instructions.btnBegin).addEvents();			_instructions.btnBegin.addEventListener(MouseEvent.CLICK, onBeginClick);		}				//FUNCTION : ON BEGIN CLICKED		protected function onBeginClick(e:MouseEvent):void {			_instructions.btnBegin.removeEventListener(MouseEvent.CLICK, onBeginClick);			RollOverButton(_instructions.btnBegin).removeEvents();			//_instructions.btnOfficialRules.removeEventListener(MouseEvent.CLICK, onRulesClick);			//RollOverButton(_instructions.btnOfficialRules).removeEvents();						TweenMax.to(_instructions, 0.5, {y:-_instructions.height, ease:Back.easeIn, visible:false, onComplete:initGame});			TweenMax.to(_gameShadow, 0.6, {alpha:0, delay:0.2, visible:false});		}				//FUNCTION : ON RULES CLICK		private function onRulesClick(e:MouseEvent):void {			var url:String = "http://zyrtec.promo.eprize.com/lovethepark/rules";			if (ExternalInterface.available){				ExternalInterface.call("openPopup", url, "OfficialRules", 1000,600);			}else {				navigateToURL(new URLRequest(url), "_blank");			}		}	}}