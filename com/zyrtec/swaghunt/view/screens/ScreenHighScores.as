package com.zyrtec.swaghunt.view.screens{	import com.g2.gaming.framework.BasicScreen;	import com.g2.gaming.framework.events.ButtonIdEvent;	import com.greensock.*;	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.zyrtec.events.ZyrtecGameEvent;	import com.zyrtec.swaghunt.model.SHModel;	import com.zyrtec.swaghunt.view.screens.highscores.SHLeaderboard;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.text.*;
	// =================================================	// ================ @Class	// =================================================	public class ScreenHighScores extends ScreenBase	{		private var _leaderboard:SHLeaderboard;//leaderboard libary clip		private var	_model:SHModel;	// Game Model 				// =================================================		// ================ @Constructor		// =================================================		public function ScreenHighScores(id:int=0, addBitmapBackground:Boolean=false, width:Number=0, height:Number=0, isTransparent:Boolean=false, color:uint=0):void		{			_model = SHModel.getInstance();						TweenPlugin.activate([RemoveTintPlugin, TintPlugin]);			super(id, addBitmapBackground, width, height, isTransparent, color);						var leaderboard = new LeaderboardMC();			addChild(leaderboard);			_leaderboard = new SHLeaderboard(leaderboard, _model); //leaderboard controller				}		// =================================================		// ================ @Callable		// =================================================		override public function addEvents():void{			if (_leaderboard!=null) {				_leaderboard.addEventListener(ZyrtecGameEvent.PLAY_AGAIN, onPlayAgain, false, 0, true);				_leaderboard.addEvents(); //enables buttons after animation done 			}		}				override public function removeEvents():void{			if (_leaderboard!=null) {				_leaderboard.removeEventListener(ZyrtecGameEvent.PLAY_AGAIN, onPlayAgain);				_leaderboard.removeEvents();			}					}				public function updateStaticText():void{			_leaderboard.setStaticText();		}				public function updateLeaderboard():void {			_leaderboard.setLeaderboardText();		}				public function disableLogInSignUp():void {			_leaderboard.disableLogInSignUp();		}		// =================================================		// ================ @Workers		// =================================================				// =================================================		// ================ @Handlers		// =================================================				private function onPlayAgain(e:ZyrtecGameEvent):void{ //restart the game, go to next system state			dispatchEvent(new ButtonIdEvent(ButtonIdEvent.BUTTON_ID, this.id));		}			}}