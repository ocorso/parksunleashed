package com.zyrtec.tugofwar.video{	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.theginbin.events.MediaEvent;	import com.theginbin.video.SimpleVideoDisplay;	import com.zyrtec.tugofwar.events.TugOfWarEvent;		import flash.display.Sprite;		public class VideoDogBoyObject extends Sprite	{		private var _pathLoop:String;		private var _pathAction:String;		private var _videoLoop:SimpleVideoDisplay;		private var _videoAction:SimpleVideoDisplay;		private var _isLooping:Boolean; 		private var _videoCount:int; //sequence the load of the videos		private var _type:String;				public function VideoDogBoyObject(pathLoop:String, pathAction:String)		{			_pathLoop = pathLoop;			_pathAction = pathAction;			_videoCount = 0;			TweenPlugin.activate([VisiblePlugin, GlowFilterPlugin]);		}				public function loadVideos():void {			if (_videoCount==0) {				_videoLoop = new SimpleVideoDisplay();					//_videoLoop.setVideoSize(900, 850);				addChild(_videoLoop);			//	_videoLoop.setBuffer(2);				_videoLoop.addEventListener(MediaEvent.BUFFER_FULL, onBufferFull);				_videoLoop.addEvents();				_videoLoop.visible = false;				_videoLoop.url = _pathLoop;			} else {				_videoAction = new SimpleVideoDisplay();					//_videoAction.setVideoSize(1080, 700);				addChild(_videoAction);			//	_videoAction.setBuffer(2);				_videoAction.addEventListener(MediaEvent.BUFFER_FULL, onBufferFull);				//_videoAction.addEventListener(MediaEvent.BUFFER_FULL, onBufferFull);				_videoAction.addEvents();				_videoAction.visible = false;				_videoAction.url = _pathAction;			}		}				public function destroy():void { //called when game is completely exited			_videoLoop.killVideo();			_videoAction.killVideo();			_videoLoop.visible = false;			_videoAction.visible = false;		}				public function playLoop():void {			_isLooping = true;			_videoLoop.visible = true;			_videoLoop.addEventListener(MediaEvent.COMPLETE, onLoopComplete);			_videoLoop.seek(0);			_videoLoop.play(); 		}				public function playAction():void {			_isLooping = false;			_videoLoop.visible = false;			_videoAction.visible = true;			_videoAction.addEventListener(MediaEvent.COMPLETE, onActionComplete);			_videoAction.seek(0);			_videoAction.play(); 			//9ce6oa, ff3333			if (_type == "dog") { //red				TweenMax.to(_videoAction, 0.3, {glowFilter:{color:0xFF3333, alpha:0.7, blurX:10, blurY:10, strength:2}});			} else { //green				TweenMax.to(_videoAction, 0.3, {glowFilter:{color:0x9ce60a, alpha:0.8, blurX:10, blurY:10, strength:2}});			}		}				public function addEvents():void {		}				public function removeEvents():void {			_videoAction.removeEventListener(MediaEvent.COMPLETE, onActionComplete);			_videoLoop.removeEventListener(MediaEvent.COMPLETE, onLoopComplete);			_isLooping = false;			_videoLoop.visible = true;			_videoAction.visible = false;			_videoLoop.pause();		}				///FUNCTION : ON BUFFER FULL - hide controls, enable rollover show/hide controls		private function onBufferFull(event:MediaEvent):void {			trace("***************&&&&&&&&&& BUFFER FULL WORK &&&&&&&&&&&&&&");			if (_videoCount==0) {				_videoLoop.removeEventListener(MediaEvent.BUFFER_FULL, onBufferFull);				_videoCount++;				//_videoLoop.seek(0);				_videoLoop.pause();				this.dispatchEvent(new TugOfWarEvent(TugOfWarEvent.VIDEO_LOADED));				loadVideos();			} else {				//_videoAction.removeEventListener(MediaEvent.BUFFER_FULL, onBufferFull);				_videoAction.removeEventListener(MediaEvent.BUFFER_FULL, onBufferFull);				//_videoAction.seek(0);				_videoAction.pause();				this.dispatchEvent(new TugOfWarEvent(TugOfWarEvent.VIDEO_LOADED));			}					}				/// FUNCTION : HANDLE LOOP VIDEO COMPLETE		private function onLoopComplete(event:MediaEvent):void {			if (_isLooping) {				_videoLoop.seek(0);				_videoLoop.play(); //resumes			}		}				/// FUNCTION : HANDLE ACTION VIDEO COMPLETE		private function onActionComplete(event:MediaEvent):void {			_videoAction.removeEventListener(MediaEvent.COMPLETE, onActionComplete);			_videoAction.visible = false;			_isLooping = true;			if (_type == "dog") { //red				TweenMax.to(_videoAction, 0.2, {glowFilter:{color:0xFF3333, alpha:0, blurX:0, blurY:0, strength:0}});			} else { //green				TweenMax.to(_videoAction, 0.2, {glowFilter:{color:0x9ce60a, alpha:0, blurX:0, blurY:0, strength:0}});			}			playLoop();		}				public function set isLooping(value:Boolean):void { _isLooping = value; };				public function set type(value:String):void { _type = value; };		public function get type():String { return _type; };	}}