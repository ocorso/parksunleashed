package com.zyrtec.tugofwar.view.patterns{	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.greensock.plugins.*;	import com.zyrtec.tugofwar.events.TugOfWarEvent;		import flash.display.*;	import flash.events.MouseEvent;		public class PatternObject extends MovieClip	{		public var off:MovieClip;		public var over:MovieClip;		private var _id:uint;		private var _speed:Number=0.3; //speed at which the object should blink		//either this will be assigned a color or depending on the asset may just have the blinked layer on the actual movieclip				public function PatternObject()		{			super();			TweenPlugin.activate([VisiblePlugin, GlowFilterPlugin,ColorTransformPlugin, TintPlugin, RemoveTintPlugin]);			over.mouseEnabled = false;			over.mouseChildren = false;			over.alpha = 0;			over.visible = false;		}				// =================================================		// ================ @Callable		// =================================================		public function addEvents():void {			off.buttonMode = true;			off.addEventListener(MouseEvent.ROLL_OVER,onBtnRoll, false, 0, true);			off.addEventListener(MouseEvent.ROLL_OUT,onBtnRollOut, false, 0, true);			off.addEventListener(MouseEvent.CLICK, onBtnClick, false, 0, true);		}				public function removeEvents():void {			off.buttonMode = false;			off.removeEventListener(MouseEvent.ROLL_OVER,onBtnRoll);			off.removeEventListener(MouseEvent.ROLL_OUT,onBtnRollOut);			off.removeEventListener(MouseEvent.CLICK, onBtnClick);					}				public function blink(delayNum:Number=0):void {			//add tint & good sound			over.visible = false;			TweenMax.to(over, 0.1, {alpha:0, overwrite:true, visible:true, onComplete:blinkColor, onCompleteParams:[delayNum]});		}				public function errorBlink():void {			//add tint & bad sound			TweenMax.to(off, 0.1, {removeTint:true, overwrite:true, onComplete:blinkColor, onCompleteParams:[0, true]});		}				// =================================================		// ================ @Workers		// =================================================		private function blinkColor(delayNum:Number=0, isError:Boolean=false):void {			if (isError) {				TweenMax.to(off, 0.3, {colorTransform:{tint:0xff0000, tintAmount:0.5}, delay:delayNum, overwrite:true, yoyo:true, repeat:1}); //turn it red			}else {				TweenMax.to(over, _speed, {alpha:1, delay:delayNum, overwrite:true, yoyo:true, repeat:1, onComplete:function blinkComplete():void {					over.visible = false;					dispatchEvent(new TugOfWarEvent(TugOfWarEvent.BLINK_COMPLETE, _id));					}});			}		}		// =================================================		// ================ @Handlers		// =================================================				private function onBtnRoll(e:MouseEvent):void {  			//TweenMax.to(_side1, 0.3, {glowFilter:{color:0x000000, alpha:0.75, blurX:7, blurY:7}, overwrite:false});		}				private function onBtnRollOut(e:MouseEvent):void {  			//TweenMax.to(this, 0.25, {glowFilter:{color:0x000000, alpha:0, blurX:0, blurY:0}, overwrite:false});		}				private function onBtnClick(e:MouseEvent):void { 			dispatchEvent(new TugOfWarEvent(TugOfWarEvent.PATTERN_OBJECT_CLICKED, _id));		}				// =================================================		// ================ @Getters / Setters		// =================================================				public function get id():uint { return _id; };		public function set id(value:uint):void { _id = value; };				public function get speed():Number { return _speed; };		public function set speed(value:Number):void { _speed = value; };	}}